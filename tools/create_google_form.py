#!/usr/bin/env python3
"""
Create Google Forms for Thesis Questionnaires

This script helps create structured questionnaires for the thesis research.
Supports all three thesis themes with pre-configured question templates.

Usage:
    python create_google_form.py --theme 1  # Transformarea proceselor
    python create_google_form.py --theme 2  # Competen»õe »ôi skills gap
    python create_google_form.py --theme 3  # ROI »ôi metrici

Author: Robert Eduard Antal
Date: 2024-10-22
"""

import os
import sys
import argparse
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from dotenv import load_dotenv
from google.oauth2 import service_account
from googleapiclient.discovery import build

load_dotenv()

# Questionnaire templates for each theme
QUESTIONNAIRE_TEMPLATES = {
    1: {
        "title": "Transformarea Proceselor prin AI √Æn Agen»õiile de Publicitate",
        "description": """
BunƒÉ ziua!

Sunt Robert Eduard Antal, student la Facultatea de »òtiin»õe Politice, Administrative »ôi ale ComunicƒÉrii, »ôi desfƒÉ»ôor un studiu despre adoptarea »ôi impactul inteligen»õei artificiale √Æn agen»õiile de publicitate »ôi comunicare din Rom√¢nia.

Chestionarul dureazƒÉ aproximativ 10-12 minute »ôi rƒÉspunsurile dvs. sunt complet anonime »ôi confiden»õiale. Datele vor fi utilizate exclusiv √Æn scop academic, pentru lucrarea mea de licen»õƒÉ.

VƒÉ mul»õumesc pentru timpul acordat!
""",
        "sections": [
            {
                "title": "A. Date Demografice »ôi Profesionale",
                "questions": [
                    {"type": "MULTIPLE_CHOICE", "question": "V√¢rstƒÉ", "options": ["18-25", "26-35", "36-45", "46-55", "56+"]},
                    {"type": "MULTIPLE_CHOICE", "question": "Gen", "options": ["Masculin", "Feminin", "Prefer sƒÉ nu rƒÉspund"]},
                    {"type": "MULTIPLE_CHOICE", "question": "Pozi»õie √Æn agen»õie", "options": ["Junior", "Mid-level", "Senior", "Manager/Director", "C-level"]},
                    {"type": "TEXT", "question": "Departament (ex: Creative, Strategy, Media, etc.)"},
                    {"type": "MULTIPLE_CHOICE", "question": "Vechime √Æn industria publicitarƒÉ", "options": ["0-2 ani", "3-5 ani", "6-10 ani", "11-15 ani", "15+ ani"]},
                    {"type": "MULTIPLE_CHOICE", "question": "MƒÉrime agen»õie", "options": ["Micro (1-10 angaja»õi)", "MicƒÉ (11-50)", "Medie (51-200)", "Mare (200+)"]},
                    {"type": "MULTIPLE_CHOICE", "question": "Tip agen»õie", "options": ["IndependentƒÉ rom√¢neascƒÉ", "Network interna»õional", "Boutique/specialized"]},
                ]
            },
            {
                "title": "B. Adoptarea AI √Æn MuncƒÉ",
                "questions": [
                    {"type": "MULTIPLE_CHOICE", "question": "Folose»ôti instrumente AI √Æn munca ta?", "options": ["Da, zilnic", "Da, sƒÉptƒÉm√¢nal", "Da, ocazional", "Nu, dar planific sƒÉ √Æncep", "Nu »ôi nu planific"]},
                    {"type": "CHECKBOX", "question": "Ce instrumente AI folose»ôti? (SelecteazƒÉ toate op»õiunile aplicabile)", "options": ["ChatGPT/GPT-4", "Midjourney/DALL-E", "Jasper/Copy.ai", "Claude/Anthropic", "Runway ML", "Synthesia", "Canva AI", "Adobe Firefly", "Altele (specifica»õi)"]},
                    {"type": "MULTIPLE_CHOICE", "question": "De c√¢t timp folose»ôti AI √Æn muncƒÉ?", "options": ["Sub 3 luni", "3-6 luni", "6-12 luni", "1-2 ani", "Peste 2 ani"]},
                    {"type": "CHECKBOX", "question": "√én ce procese folose»ôti AI?", "options": ["Generare con»õinut scris", "Generare imagini/video", "Research »ôi insights", "Planificare media", "Analiza datelor", "Brainstorming/idea»õie", "Personalizare campanii", "Altele (specifica»õi)"]},
                ]
            },
            {
                "title": "C. Impact asupra Muncii",
                "questions": [
                    {"type": "SCALE", "question": "C√¢t timp economise»ôti lunar prin folosirea AI? (estimare)", "scale": {"low": "0%", "high": "50%+"}},
                    {"type": "SCALE", "question": "Cu c√¢t AI a crescut calitatea muncii tale?", "scale": {"low": "Deloc", "high": "Semnificativ"}},
                    {"type": "CHECKBOX", "question": "Ce taskuri ai automatizat/delegat la AI?", "options": ["Writing copy", "Visual creation", "Data analysis", "Research", "Reporting", "Social media content", "Altele"]},
                ]
            }
        ]
    },
    2: {
        "title": "Viitorul Competen»õelor: Skills Gap »ôi Reskilling √Æn Era AI",
        "description": """
BunƒÉ ziua!

Acest chestionar investigheazƒÉ nevoile de competen»õe »ôi training √Æn contextul adoptƒÉrii AI √Æn agen»õiile de comunicare.

Completarea dureazƒÉ aproximativ 10 minute. RƒÉspunsurile sunt anonime »ôi confiden»õiale.

Mul»õumesc!
Robert Eduard Antal, Student FSPAC
""",
        "sections": [
            {
                "title": "A. Skills Actuale vs. Necesare",
                "questions": [
                    {"type": "GRID", "question": "EvalueazƒÉ-»õi competen»õele actuale »ôi importan»õa lor viitoare", "rows": ["Prompt engineering", "Data analysis", "AI tools literacy", "Creative thinking", "Strategic planning", "Storytelling", "Technical skills"], "columns": ["Nivel actual (1-7)", "Importan»õƒÉ viitor (1-7)"]},
                ]
            },
            {
                "title": "B. Training »ôi Reskilling",
                "questions": [
                    {"type": "MULTIPLE_CHOICE", "question": "Agen»õia oferƒÉ training pe AI?", "options": ["Da, formal »ôi structurat", "Da, dar informal", "Nu, dar planificƒÉ", "Nu"]},
                    {"type": "CHECKBOX", "question": "Ce tipuri de training ai urmat?", "options": ["Workshop-uri interne", "Cursuri online", "CertificƒÉri", "Self-learning", "Conferences", "Niciunul"]},
                ]
            }
        ]
    },
    3: {
        "title": "ROI »ôi Metrici de Performan»õƒÉ AI √Æn Campanii",
        "description": """
BunƒÉ ziua!

Acest chestionar analizeazƒÉ impactul mƒÉsurabil al AI asupra performan»õei campaniilor.

Completarea dureazƒÉ 8-10 minute. Confiden»õial »ôi anonim.

Mul»õumesc!
Robert Eduard Antal, Student FSPAC
""",
        "sections": [
            {
                "title": "A. Utilizare AI √Æn Campanii",
                "questions": [
                    {"type": "MULTIPLE_CHOICE", "question": "C√¢t de des folose»ôti AI √Æn campanii?", "options": ["√én toate", "√én majoritatea", "√én unele", "Rar", "NiciodatƒÉ"]},
                    {"type": "CHECKBOX", "question": "Pentru ce folose»ôti AI √Æn campanii?", "options": ["Targeting", "Content creation", "Optimization", "Reporting", "Predictive analytics", "Personalization"]},
                ]
            },
            {
                "title": "B. Impact MƒÉsurabil",
                "questions": [
                    {"type": "SCALE", "question": "ROI campanii cu AI vs. fƒÉrƒÉ AI", "scale": {"low": "Similar", "high": "Mult mai mare"}},
                    {"type": "TEXT", "question": "Cu c√¢t (%) au crescut performan»õele campaniilor cu AI? (estimare)"},
                ]
            }
        ]
    }
}

def create_form(theme_id: int):
    """
    Create a Google Form based on theme template.

    Args:
        theme_id: Theme number (1, 2, or 3)
    """
    if theme_id not in QUESTIONNAIRE_TEMPLATES:
        print(f"‚ùå Invalid theme ID: {theme_id}. Use 1, 2, or 3.")
        return

    template = QUESTIONNAIRE_TEMPLATES[theme_id]

    print(f"\nüìù Creating Google Form: {template['title']}")
    print("=" * 60)

    # Load credentials
    credentials_path = os.getenv('GOOGLE_APPLICATION_CREDENTIALS')
    if not credentials_path:
        print("‚ùå ERROR: GOOGLE_APPLICATION_CREDENTIALS not set in .env")
        return

    creds_file = Path(__file__).parent.parent / credentials_path
    if not creds_file.exists():
        print(f"‚ùå ERROR: Credentials file not found at {creds_file}")
        return

    try:
        credentials = service_account.Credentials.from_service_account_file(
            str(creds_file),
            scopes=['https://www.googleapis.com/auth/forms.body']
        )

        forms_service = build('forms', 'v1', credentials=credentials)

        # Create form
        form = {
            "info": {
                "title": template['title'],
                "documentTitle": template['title'],
            }
        }

        result = forms_service.forms().create(body=form).execute()
        form_id = result['formId']

        print(f"‚úì Form created with ID: {form_id}")
        print(f"‚úì Form URL: https://docs.google.com/forms/d/{form_id}/edit")

        print("\nüìã Note: Questions need to be added manually or via additional API calls")
        print("   Use the URL above to add questions from the template below:")
        print("\n" + "=" * 60)
        print(template['description'])

        for section in template['sections']:
            print(f"\n{section['title']}")
            print("-" * 40)
            for i, q in enumerate(section['questions'], 1):
                print(f"{i}. {q['question']} ({q['type']})")
                if 'options' in q:
                    for opt in q['options']:
                        print(f"   - {opt}")

        return form_id

    except Exception as e:
        print(f"‚ùå ERROR: {str(e)}")
        return None

def main():
    parser = argparse.ArgumentParser(description="Create Google Forms for thesis questionnaires")
    parser.add_argument('--theme', type=int, choices=[1, 2, 3], required=True,
                        help="Theme number: 1=Transformarea proceselor, 2=Competen»õe, 3=ROI")

    args = parser.parse_args()
    create_form(args.theme)

if __name__ == "__main__":
    main()
